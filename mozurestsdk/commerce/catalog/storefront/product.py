
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class Product(object):
	def __init__(self, apiContext: ApiContext = None, dataViewMode="Live", mozuClient = None):
		if (apiContext is not None and apiContext.dataViewMode is None):
			apiContext.dataViewMode = dataViewMode;
		else:
			apiContext = ApiContext(dataViewMode = dataViewMode);
		self.client = mozuClient or default_client();
		self.client.withApiContext(apiContext);
	
	def getProducts(self,filter = None, startIndex = None, pageSize = None, sortBy = None, responseOptions = None, cursorMark = None, responseFields = None):
		""" 
		
		Args:
			| filter (string) - 
			| startIndex (int) - 
			| pageSize (int) - Used to page results from a query. Indicates the maximum number of entities to return from a single query. Default value: 20. Maximum value: 200.
			| sortBy (string) - 
			| responseOptions (string) - 
			| cursorMark (string) - 
			| responseFields (string) - 
		
		Returns:
			| ProductCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/?filter={filter}&startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&responseOptions={responseOptions}&cursorMark={cursorMark}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("cursorMark", cursorMark);
		url.formatUrl("filter", filter);
		url.formatUrl("pageSize", pageSize);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("responseOptions", responseOptions);
		url.formatUrl("sortBy", sortBy);
		url.formatUrl("startIndex", startIndex);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProductInventory(self,productCode, locationCodes = None, responseFields = None):
		""" 
		
		Args:
			| productCode (string) - 
			| locationCodes (string) - Array of location codes for which to retrieve product inventory information.
			| responseFields (string) - 
		
		Returns:
			| LocationInventoryCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/{productCode}/locationinventory?locationCodes={locationCodes}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("locationCodes", locationCodes);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProduct(self,productCode, variationProductCode = None, allowInactive = False, skipInventoryCheck = False, supressOutOfStock404 = False, quantity = None, acceptVariantProductCode = False, purchaseLocation = None, responseFields = None):
		""" 
		
		Args:
			| productCode (string) - 
			| variationProductCode (string) - Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
			| allowInactive (bool) - If true, returns an inactive product as part of the query.
			| skipInventoryCheck (bool) - If true, skip the inventory validation process for the specified product.
			| supressOutOfStock404 (bool) - 
			| quantity (int) - 
			| acceptVariantProductCode (bool) - 
			| purchaseLocation (string) - 
			| responseFields (string) - 
		
		Returns:
			| Product 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/{productCode}?variationProductCode={variationProductCode}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&supressOutOfStock404={supressOutOfStock404}&quantity={quantity}&acceptVariantProductCode={acceptVariantProductCode}&purchaseLocation={purchaseLocation}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("acceptVariantProductCode", acceptVariantProductCode);
		url.formatUrl("allowInactive", allowInactive);
		url.formatUrl("productCode", productCode);
		url.formatUrl("purchaseLocation", purchaseLocation);
		url.formatUrl("quantity", quantity);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("skipInventoryCheck", skipInventoryCheck);
		url.formatUrl("supressOutOfStock404", supressOutOfStock404);
		url.formatUrl("variationProductCode", variationProductCode);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProductForIndexing(self,productCode, productVersion = None, lastModifiedDate = None, responseFields = None):
		""" 
		
		Args:
			| productCode (string) - 
			| productVersion (long) - 
			| lastModifiedDate (DateTime) - 
			| responseFields (string) - 
		
		Returns:
			| Product 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/indexing/{productCode}?productVersion={productVersion}&lastModifiedDate={lastModifiedDate}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("lastModifiedDate", lastModifiedDate);
		url.formatUrl("productCode", productCode);
		url.formatUrl("productVersion", productVersion);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def configuredProduct(self,productOptionSelections, productCode, includeOptionDetails = False, skipInventoryCheck = False, quantity = None, purchaseLocation = None, responseFields = None):
		""" 
		
		Args:
			| productOptionSelections(productOptionSelections) - For a product with shopper-configurable options, the properties of the product options selected by the shopper.
			| productCode (string) - 
			| includeOptionDetails (bool) - If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.
			| skipInventoryCheck (bool) - If true, skip the inventory validation process for the specified product.
			| quantity (int) - 
			| purchaseLocation (string) - 
			| responseFields (string) - 
		
		Returns:
			| ConfiguredProduct 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/{productCode}/configure?includeOptionDetails={includeOptionDetails}&skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&purchaseLocation={purchaseLocation}&responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("includeOptionDetails", includeOptionDetails);
		url.formatUrl("productCode", productCode);
		url.formatUrl("purchaseLocation", purchaseLocation);
		url.formatUrl("quantity", quantity);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("skipInventoryCheck", skipInventoryCheck);
		self.client.withResourceUrl(url).withBody(productOptionSelections).execute();
		return self.client.result();

	
		
	def validateProduct(self,productOptionSelections, productCode, skipInventoryCheck = False, quantity = None, skipDefaults = False, purchaseLocation = None, responseFields = None):
		""" 
		
		Args:
			| productOptionSelections(productOptionSelections) - For a product with shopper-configurable options, the properties of the product options selected by the shopper.
			| productCode (string) - 
			| skipInventoryCheck (bool) - If true, skip the inventory validation process for the specified product.
			| quantity (int) - 
			| skipDefaults (bool) - 
			| purchaseLocation (string) - 
			| responseFields (string) - 
		
		Returns:
			| ProductValidationSummary 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/{productCode}/validate?skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&skipDefaults={skipDefaults}&purchaseLocation={purchaseLocation}&responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		url.formatUrl("purchaseLocation", purchaseLocation);
		url.formatUrl("quantity", quantity);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("skipDefaults", skipDefaults);
		url.formatUrl("skipInventoryCheck", skipInventoryCheck);
		self.client.withResourceUrl(url).withBody(productOptionSelections).execute();
		return self.client.result();

	
		
	def validateDiscounts(self,discountSelections, productCode, variationProductCode = None, customerAccountId = None, allowInactive = False, skipInventoryCheck = False, responseFields = None):
		""" 
		
		Args:
			| discountSelections(discountSelections) - List of discount IDs to evaluate for the specified product.
			| productCode (string) - 
			| variationProductCode (string) - Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
			| customerAccountId (int) - Unique ID of the customer account associated with the shopper requesting the discount.
			| allowInactive (bool) - If true, this operation returns inactive product discounts as part of the POST.
			| skipInventoryCheck (bool) - If true, do not validate the product inventory when evaluating the list of discounts.
			| responseFields (string) - 
		
		Returns:
			| DiscountValidationSummary 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/{productCode}/validateDiscounts?variationProductCode={variationProductCode}&customerAccountId={customerAccountId}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("allowInactive", allowInactive);
		url.formatUrl("customerAccountId", customerAccountId);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("skipInventoryCheck", skipInventoryCheck);
		url.formatUrl("variationProductCode", variationProductCode);
		self.client.withResourceUrl(url).withBody(discountSelections).execute();
		return self.client.result();

	
		
	def getProductCosts(self,query, responseFields = None):
		""" 
		
		Args:
			| query(query) - 
			| responseFields (string) - 
		
		Returns:
			| ProductCostCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/costs?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(query).execute();
		return self.client.result();

	
		
	def getProductInventories(self,query, responseFields = None):
		""" 
		
		Args:
			| query(query) - 
			| responseFields (string) - 
		
		Returns:
			| LocationInventoryCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/storefront/products/locationinventory?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(query).execute();
		return self.client.result();

	
	
	