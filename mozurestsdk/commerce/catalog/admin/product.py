
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class Product(object):
	def __init__(self, apiContext: ApiContext = None, dataViewMode="Live", mozuClient = None):
		if (apiContext is not None and apiContext.dataViewMode is None):
			apiContext.dataViewMode = dataViewMode;
		else:
			apiContext = ApiContext(dataViewMode = dataViewMode);
		self.client = mozuClient or default_client();
		self.client.withApiContext(apiContext);
	
	def getProducts(self,startIndex = None, pageSize = None, sortBy = None, filter = None, q = None, qLimit = None, noCount = False, responseFields = None):
		""" 
		
		Args:
			| startIndex (int) - 
			| pageSize (int) - 
			| sortBy (string) - 
			| filter (string) - 
			| q (string) - A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.
			| qLimit (int) - The maximum number of search results to return in the response. You can limit any range between 1-100.
			| noCount (bool) - If true, the operation does not return the TotalCount number of results.
			| responseFields (string) - 
		
		Returns:
			| ProductCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&q={q}&qLimit={qLimit}&noCount={noCount}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("filter", filter);
		url.formatUrl("noCount", noCount);
		url.formatUrl("pageSize", pageSize);
		url.formatUrl("q", q);
		url.formatUrl("qLimit", qLimit);
		url.formatUrl("responseFields", responseFields);
		url.formatUrl("sortBy", sortBy);
		url.formatUrl("startIndex", startIndex);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProductInCatalogs(self,productCode):
		""" 
		
		Args:
			| productCode (string) - 
		
		Returns:
			| array of ProductInCatalogInfo 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProductInCatalog(self,productCode, catalogId, responseFields = None):
		""" 
		
		Args:
			| productCode (string) - 
			| catalogId (int) - 
			| responseFields (string) - 
		
		Returns:
			| ProductInCatalogInfo 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("catalogId", catalogId);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getProduct(self,productCode, responseFields = None):
		""" 
		
		Args:
			| productCode (string) - 
			| responseFields (string) - 
		
		Returns:
			| Product 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def addProduct(self,product, responseFields = None):
		""" 
		
		Args:
			| product(product) - Properties of the new product. You must supply values for the product code, product name, and price.
			| responseFields (string) - 
		
		Returns:
			| Product 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(product).execute();
		return self.client.result();

	
		
	def addProductInCatalog(self,productInCatalogInfoIn, productCode, responseFields = None):
		""" 
		
		Args:
			| productInCatalogInfoIn(productInCatalogInfoIn) - Properties of the product to define for the specific catalog association.
			| productCode (string) - 
			| responseFields (string) - 
		
		Returns:
			| ProductInCatalogInfo 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(productInCatalogInfoIn).execute();
		return self.client.result();

	
		
	def renameProductCodes(self,productCodeRenames):
		""" 
		
		Args:
			| productCodeRenames(array|productCodeRenames) - 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/Actions/RenameProductCodes", "POST", UrlLocation.TenantPod, False);
		self.client.withResourceUrl(url).withBody(productCodeRenames).execute();

	
		
	def updateProductInCatalogs(self,productInCatalogsIn, productCode):
		""" 
		
		Args:
			| productInCatalogsIn(array|productInCatalogsIn) - Properties of the product to update for each associated catalog.
			| productCode (string) - 
		
		Returns:
			| array of ProductInCatalogInfo 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		self.client.withResourceUrl(url).withBody(productInCatalogsIn).execute();
		return self.client.result();

	
		
	def updateProductInCatalog(self,productInCatalogInfoIn, productCode, catalogId, responseFields = None):
		""" 
		
		Args:
			| productInCatalogInfoIn(productInCatalogInfoIn) - Properties of the product associated with the catalog specified in the request.
			| productCode (string) - 
			| catalogId (int) - 
			| responseFields (string) - 
		
		Returns:
			| ProductInCatalogInfo 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}?responseFields={responseFields}", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("catalogId", catalogId);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(productInCatalogInfoIn).execute();
		return self.client.result();

	
		
	def updateProduct(self,product, productCode, responseFields = None):
		""" 
		
		Args:
			| product(product) - Properties of the product definition to update in the master catalog.
			| productCode (string) - 
			| responseFields (string) - 
		
		Returns:
			| Product 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}?responseFields={responseFields}", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(product).execute();
		return self.client.result();

	
		
	def deleteProduct(self,productCode):
		""" 
		
		Args:
			| productCode (string) - 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}", "DELETE", UrlLocation.TenantPod, False);
		url.formatUrl("productCode", productCode);
		self.client.withResourceUrl(url).execute();

	
		
	def deleteProductInCatalog(self,productCode, catalogId):
		""" 
		
		Args:
			| productCode (string) - 
			| catalogId (int) - 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/catalog/admin/products/{productCode}/ProductInCatalogs/{catalogId}", "DELETE", UrlLocation.TenantPod, False);
		url.formatUrl("catalogId", catalogId);
		url.formatUrl("productCode", productCode);
		self.client.withResourceUrl(url).execute();

	
	
	