
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class Payment(object):
	def __init__(self, apiContext: ApiContext = None, mozuClient = None):
		self.client = mozuClient or default_client();
		if (apiContext is not None):
			self.client.withApiContext(apiContext);
		else:
			self.client.withApiContext(ApiContext());
	
	def getPayments(self,orderId, responseFields = None):
		""" 
		
		Args:
			| orderId (string) - Unique identifier of the order.
			| responseFields (string) - 
		
		Returns:
			| PaymentCollection 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/payments/?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getAvailablePaymentActions(self,orderId, paymentId):
		""" 
		
		Args:
			| orderId (string) - Unique identifier of the order associated with the payment.
			| paymentId (string) - Unique identifer of the payment for which to retrieve available actions.
		
		Returns:
			| array of string 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/payments/{paymentId}/actions", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("paymentId", paymentId);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getPayment(self,orderId, paymentId, responseFields = None):
		""" 
		
		Args:
			| orderId (string) - Unique identifier of the order associated with the payment transaction.
			| paymentId (string) - Unique identifier of the payment transaction submitted for the order.
			| responseFields (string) - 
		
		Returns:
			| Payment 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/payments/{paymentId}?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("paymentId", paymentId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def performPaymentAction(self,action, orderId, paymentId, responseFields = None):
		""" 
		
		Args:
			| action(action) - The action to perform for the payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.
			| orderId (string) - Unique identifier of the order associated with the payment.
			| paymentId (string) - Unique identifer of the payment for which to perform the action.
			| responseFields (string) - 
		
		Returns:
			| Order 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/payments/{paymentId}/actions?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("paymentId", paymentId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(action).execute();
		return self.client.result();

	
		
	def createPaymentAction(self,action, orderId, responseFields = None):
		""" 
		
		Args:
			| action(action) - To action to perform for the newly created payment. Possible values are AuthAndCapture, AuthorizePayment, CapturePayment, VoidPayment, CreditPayment, RequestCheck, ApplyCheck, DeclineCheck.
			| orderId (string) - Unique identifier of the order for which to apply the payment.
			| responseFields (string) - 
		
		Returns:
			| Order 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/payments/actions?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(action).execute();
		return self.client.result();

	
	
	