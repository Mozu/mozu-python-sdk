
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class DigitalPackage(object):
	def __init__(self, apiContext: ApiContext = None, mozuClient = None):
		self.client = mozuClient or default_client();
		if (apiContext is not None):
			self.client.withApiContext(apiContext);
		else:
			self.client.withApiContext(ApiContext());
	
	def getAvailableDigitalPackageFulfillmentActions(self,orderId, digitalPackageId):
		""" 
		
		Args:
			| orderId (string) - This parameter provides the unique identifier of the order on which to get a list of available actions.
			| digitalPackageId (string) - This parameter supplies package ID to get fulfillment actions for the digital package.
		
		Returns:
			| array of string 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}/actions", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getDigitalPackage(self,orderId, digitalPackageId, responseFields = None):
		""" 
		
		Args:
			| orderId (string) - This parameter provides the unique identifier of the order with which to associate the digital package.
			| digitalPackageId (string) - This parameter provides the digital package Id.
			| responseFields (string) - 
		
		Returns:
			| DigitalPackage 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def createDigitalPackage(self,digitalPackage, orderId, responseFields = None):
		""" 
		
		Args:
			| digitalPackage(digitalPackage) - The digitalPackage parameter is a required parameter for the CreateDigitalPackages operation. The digitalPackage is the digital package to create and add to the order.
			| orderId (string) - The orderID is a required paramter for the digitalpackages operation. The orderId is a unique identifier of the order with which to associate the digital package.
			| responseFields (string) - 
		
		Returns:
			| DigitalPackage 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(digitalPackage).execute();
		return self.client.result();

	
		
	def updateDigitalPackage(self,digitalPackage, orderId, digitalPackageId, responseFields = None):
		""" 
		
		Args:
			| digitalPackage(digitalPackage) - This parameter provides the package content to update in the order.
			| orderId (string) - This parameter provides the unique identifier of the order with which to associate the digital package.
			| digitalPackageId (string) - This parameter specifies the digital package to update in the order.
			| responseFields (string) - 
		
		Returns:
			| DigitalPackage 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}?responseFields={responseFields}", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).withBody(digitalPackage).execute();
		return self.client.result();

	
		
	def deleteDigitalPackage(self,orderId, digitalPackageId):
		""" 
		
		Args:
			| orderId (string) - The orderId is unique identifier of the order with which to associate the package.
			| digitalPackageId (string) - The digitalPackage ID is unique package ID to update on the order.
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}", "DELETE", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		self.client.withResourceUrl(url).execute();

	
	
	