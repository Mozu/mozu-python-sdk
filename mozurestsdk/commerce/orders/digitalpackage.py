
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class DigitalPackage(object):
	def __init__(self, apiContext: ApiContext = None, mozuClient = None):
		self.client = mozuClient or default_client();
		client.withApiContext(apiContext);
	
	def getAvailableDigitalPackageFulfillmentActions(self,orderId, digitalPackageId):
		"""
			Retrieves a collection of fulfillment options for digital packages. Options may include emailed files/links or provided links. 
			Request Params
				string digitalPackageId This parameter supplies package ID to get fulfillment actions for the digital package.
				string orderId Unique identifier of the order.
			Response
				array|string 
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}/actions", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getDigitalPackage(self,orderId, digitalPackageId, responseFields = None):
		"""
			This operation retreives a digital package within an order and it requires two parameters: orderId and digitalPackageId.
			Request Params
				string digitalPackageId This parameter supplies package ID to get fulfillment actions for the digital package.
				string orderId Unique identifier of the order.
				string responseFields Use this field to include those fields which are not included by default.
			Response
				DigitalPackage 
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}?responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def createDigitalPackage(self,digitalPackage, orderId, responseFields = None):
		"""
			Lets you apply a digital package to the order using the orderId and digitalPackage parameters.
			Request Params
				string orderId Unique identifier of the order.
				string responseFields Use this field to include those fields which are not included by default.
				digitalPackage Lets you manage an order's digital packages, by applying a digital package to the order.
			Response
				DigitalPackage 
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages?responseFields={responseFields}", "POST", UrlLocation.TenantPod, False);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def updateDigitalPackage(self,digitalPackage, orderId, digitalPackageId, responseFields = None):
		"""
			This method operates on one digital package, specified by the id given. This method ensures that the digital package ID provided is in the order with the id given, and then updates the properties of that package with the properties of the one passed in using the ‘digitalpackage’ parameter.
			Request Params
				string digitalPackageId This parameter supplies package ID to get fulfillment actions for the digital package.
				string orderId Unique identifier of the order.
				string responseFields Use this field to include those fields which are not included by default.
				digitalPackage Lets you manage an order's digital packages, by applying a digital package to the order.
			Response
				DigitalPackage 
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}?responseFields={responseFields}", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def deleteDigitalPackage(self,orderId, digitalPackageId):
		"""
			This operation deletes a digital package from an order. This operation requires three parameters: orderId, digitalPackageId, and digitalPackage.
			Request Params
				string digitalPackageId This parameter supplies package ID to get fulfillment actions for the digital package.
				string orderId Unique identifier of the order.
			Response
		"""

		url = MozuUrl("/api/commerce/orders/{orderId}/digitalpackages/{digitalPackageId}", "DELETE", UrlLocation.TenantPod, False);
		url.formatUrl("digitalPackageId", digitalPackageId);
		url.formatUrl("orderId", orderId);
		self.client.withResourceUrl(url).execute();

	
	
	