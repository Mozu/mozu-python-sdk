
"""
    This code was generated by Codezu.     

    Changes to this file may cause incorrect behavior and will be lost if
    the code is regenerated.
"""


from mozurestsdk.mozuclient import default as default_client
from mozurestsdk.mozuurl import MozuUrl;
from mozurestsdk.urllocation import UrlLocation
from mozurestsdk.apicontext import ApiContext;

class DocumentTree(object):
	def __init__(self, apiContext: ApiContext = None, dataViewMode="Live", mozuClient = None):
		if (apiContext is not None and apiContext.dataViewMode is None):
			apiContext.dataViewMode = dataViewMode;
		else:
			apiContext = ApiContext(dataViewMode = dataViewMode);
		self.client = mozuClient or default_client();
		self.client.withApiContext(apiContext);
	
	def getTreeDocumentContent(self,documentListName, documentName):
		""" 
		
		Args:
			| documentListName (string) - The name of the document list associated with the document.
			| documentName (string) - The name of the document, which is unique within its folder.
		
		Returns:
			| Stream 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/content/documentlists/{documentListName}/documentTree/{documentName}/content", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("documentListName", documentListName);
		url.formatUrl("documentName", documentName);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def transformTreeDocumentContent(self,documentListName, documentName, width = None, height = None, max = None, maxWidth = None, maxHeight = None, crop = None, quality = None):
		""" 
		
		Args:
			| documentListName (string) - 
			| documentName (string) - 
			| width (int) - 
			| height (int) - 
			| max (int) - 
			| maxWidth (int) - 
			| maxHeight (int) - 
			| crop (string) - 
			| quality (int) - 
		
		Returns:
			| Stream 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/content/documentlists/{documentListName}/documentTree/{documentName}/transform?width={width}&height={height}&maxWidth={maxWidth}&maxHeight={maxHeight}&crop={crop}&quality={quality}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("crop", crop);
		url.formatUrl("documentListName", documentListName);
		url.formatUrl("documentName", documentName);
		url.formatUrl("height", height);
		url.formatUrl("max", max);
		url.formatUrl("maxHeight", maxHeight);
		url.formatUrl("maxWidth", maxWidth);
		url.formatUrl("quality", quality);
		url.formatUrl("width", width);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def getTreeDocument(self,documentListName, documentName, includeInactive = False, responseFields = None):
		""" 
		
		Args:
			| documentListName (string) - The name of the document list associated with the document.
			| documentName (string) - The name of the document, which is unique within its folder.
			| includeInactive (bool) - 
			| responseFields (string) - 
		
		Returns:
			| Document 
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/content/documentlists/{documentListName}/documentTree/{documentName}?includeInactive={includeInactive}&responseFields={responseFields}", "GET", UrlLocation.TenantPod, False);
		url.formatUrl("documentListName", documentListName);
		url.formatUrl("documentName", documentName);
		url.formatUrl("includeInactive", includeInactive);
		url.formatUrl("responseFields", responseFields);
		self.client.withResourceUrl(url).execute();
		return self.client.result();

	
		
	def updateTreeDocumentContent(self,stream, documentListName, documentName, contentType = None):
		""" 
		
		Args:
			| stream(stream) - Input output stream that delivers information.
			| documentListName (string) - The name of the document list associated with the document.
			| documentName (string) - The name of the document, which is unique within its folder.
			| contentType (string) - set content type of the data uploaded|
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}", "PUT", UrlLocation.TenantPod, False);
		url.formatUrl("documentListName", documentListName);
		url.formatUrl("documentName", documentName);
		self.client.withResourceUrl(url).withBody(stream).withContentType(contentType).execute();

	
		
	def deleteTreeDocumentContent(self,stream, documentListName, documentName, contentType = None):
		""" 
		
		Args:
			| stream(stream) - Input output stream that delivers information.
			| documentListName (string) - The name of the document list associated with the document.
			| documentName (string) - The name of the document, which is unique within its folder.
			| contentType (string) - set content type of the data uploaded|
		
		Raises:
			| ApiException
		
		"""

		url = MozuUrl("/api/content/documentlists/{documentListName}/documentTree/{documentName}/content?folderPath={folderPath}&folderId={folderId}", "DELETE", UrlLocation.TenantPod, False);
		url.formatUrl("documentListName", documentListName);
		url.formatUrl("documentName", documentName);
		self.client.withResourceUrl(url).withBody(stream).withContentType(contentType).execute();

	
	
	